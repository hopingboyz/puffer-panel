name: Persistent QEMU VM (Auto Restart, Backup, Shutdown)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'  # Every 5 hours

jobs:
  persistent-vm:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # For release uploads

    steps:
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y qemu-kvm cloud-image-utils genisoimage openssh-client wget tmate gh

    - name: Download existing persistent disk if available
      run: |
        echo "Checking for previous VM disk..."
        gh release download vm-disk -p persistent.img || qemu-img create -f qcow2 persistent.img 10G

    - name: Download Ubuntu cloud image
      run: |
        wget -q https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img -O ubuntu.img

    - name: Create cloud-init config (auto root login)
      run: |
        mkdir -p seed
        echo "instance-id: githubvm" > seed/meta-data
        cat > seed/user-data <<EOF
        #cloud-config
        users:
          - name: root
            ssh-authorized-keys:
              - $(curl -s https://api.github.com/users/${{ github.actor }}/keys | grep '"key":' | head -n1 | cut -d'"' -f4)
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
        ssh_pwauth: false
        disable_root: false
        EOF
        cloud-localds seed.img seed/user-data seed/meta-data

    - name: Launch QEMU VM in background
      run: |
        echo "Starting VM..."
        nohup qemu-system-x86_64 \
          -enable-kvm \
          -m 2048 -smp 2 \
          -drive file=persistent.img,format=qcow2 \
          -drive file=ubuntu.img,format=qcow2 \
          -drive file=seed.img,format=raw \
          -net nic -net user,hostfwd=tcp::2222-:22 \
          -nographic > vm.log 2>&1 &
        echo $! > vm.pid

    - name: Wait for VM to be ready
      run: |
        echo "Waiting for SSH on port 2222..."
        for i in {1..30}; do
          nc -z localhost 2222 && echo "VM is ready!" && break
          sleep 3
        done

    - name: Start tmate session for terminal access
      uses: mxschmitt/action-tmate@v3

    - name: Shutdown VM after tmate ends
      run: |
        echo "Shutting down VM..."
        if [ -f vm.pid ]; then
          kill $(cat vm.pid) || true
        fi
        sleep 5

    - name: Upload persistent disk to GitHub Release
      if: always()
      run: |
        echo "Deleting old release if exists..."
        gh release delete vm-disk --yes || true

        echo "Creating new release with updated persistent.img..."
        gh release create vm-disk persistent.img -t "VM Backup" -n "Auto backup after VM shutdown"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
